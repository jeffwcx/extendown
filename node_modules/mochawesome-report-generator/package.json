{
  "_args": [
    [
      {
        "raw": "mochawesome-report-generator@^2.1.0",
        "scope": null,
        "escapedName": "mochawesome-report-generator",
        "name": "mochawesome-report-generator",
        "rawSpec": "^2.1.0",
        "spec": ">=2.1.0 <3.0.0",
        "type": "range"
      },
      "/home/jeffwang/fe/extendown/node_modules/mochawesome"
    ]
  ],
  "_from": "mochawesome-report-generator@>=2.1.0 <3.0.0",
  "_id": "mochawesome-report-generator@2.1.0",
  "_inCache": true,
  "_location": "/mochawesome-report-generator",
  "_nodeVersion": "6.10.2",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/mochawesome-report-generator-2.1.0.tgz_1496975390396_0.33145890990272164"
  },
  "_npmUser": {
    "name": "adamgruber",
    "email": "talknmime@gmail.com"
  },
  "_npmVersion": "4.5.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "mochawesome-report-generator@^2.1.0",
    "scope": null,
    "escapedName": "mochawesome-report-generator",
    "name": "mochawesome-report-generator",
    "rawSpec": "^2.1.0",
    "spec": ">=2.1.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/mochawesome"
  ],
  "_resolved": "http://registry.npmjs.org/mochawesome-report-generator/-/mochawesome-report-generator-2.1.0.tgz",
  "_shasum": "86b22fc90b677e0128b411bb6b0779ff7df68184",
  "_shrinkwrap": null,
  "_spec": "mochawesome-report-generator@^2.1.0",
  "_where": "/home/jeffwang/fe/extendown/node_modules/mochawesome",
  "author": {
    "name": "Adam Gruber"
  },
  "bin": {
    "marge": "./bin/cli.js"
  },
  "bugs": {
    "url": "https://github.com/adamgruber/mochawesome-report-generator/issues"
  },
  "dependencies": {
    "chalk": "^1.1.3",
    "dateformat": "^2.0.0",
    "fs-extra": "^3.0.0",
    "fsu": "^1.0.2",
    "lodash.isfunction": "^3.0.8",
    "opener": "^1.4.2",
    "prop-types": "^15.5.8",
    "react": "^15.3.2",
    "react-dom": "^15.3.2",
    "tcomb": "^3.2.17",
    "tcomb-validation": "^3.3.0",
    "validator": "^7.0.0",
    "yargs": "^7.0.2"
  },
  "description": "Generates gorgeous HTML reports from mochawesome reporter.",
  "devDependencies": {
    "app-module-path": "^2.1.0",
    "babel-cli": "^6.18.0",
    "babel-eslint": "^7.0.0",
    "babel-loader": "^7.0.0",
    "babel-plugin-istanbul": "^4.0.0",
    "babel-plugin-transform-decorators-legacy": "^1.3.4",
    "babel-preset-es2015": "^6.16.0",
    "babel-preset-react": "^6.16.0",
    "babel-preset-stage-0": "^6.16.0",
    "babel-register": "^6.18.0",
    "chai": "^3.5.0",
    "chai-as-promised": "^6.0.0",
    "chai-enzyme": "^0.6.0",
    "chart.js": "^2.3.0",
    "classnames": "^2.2.5",
    "cross-env": "^4.0.0",
    "css-loader": "^0.28.0",
    "css-modules-require-hook": "^4.0.5",
    "enzyme": "^2.5.1",
    "eslint": "^3.16.0",
    "eslint-config-airbnb": "^14.1.0",
    "eslint-loader": "^1.7.1",
    "eslint-plugin-import": "^2.2.0",
    "eslint-plugin-jsx-a11y": "^4.0.0",
    "eslint-plugin-react": "^6.10.0",
    "extract-text-webpack-plugin": "^2.1.0",
    "file-loader": "^0.11.1",
    "highlight.js": "^9.7.0",
    "jsdom": "^9.8.0",
    "json-loader": "^0.5.4",
    "lodash": "^4.16.4",
    "material-design-icons": "^3.0.1",
    "mobx": "^3.1.8",
    "mobx-react": "^4.0.0",
    "mobx-react-devtools": "^4.2.9",
    "mocha": "*",
    "moment": "^2.15.1",
    "nodemon": "^1.11.0",
    "normalize.css": "^6.0.0",
    "nyc": "^10.0.0",
    "opinionate.css": "^1.0.0",
    "postcss": "^5.2.5",
    "postcss-cssnext": "^2.8.0",
    "postcss-import": "^9.0.0",
    "postcss-loader": "^1.0.0",
    "postcss-reporter": "^3.0.0",
    "postcss-url": "^6.0.1",
    "proxyquire": "^1.7.10",
    "react-test-renderer": "^15.5.4",
    "should": "^11.1.1",
    "sinon": "^2.1.0",
    "style-loader": "^0.17.0",
    "stylelint": "^7.5.0",
    "stylelint-config-standard": "^16.0.0",
    "stylelint-order": "^0.4.3",
    "stylelint-webpack-plugin": "^0.7.0",
    "url-loader": "^0.5.7",
    "webpack": "^2.3.2",
    "webpack-dev-server": "^2.4.2"
  },
  "directories": {},
  "dist": {
    "shasum": "86b22fc90b677e0128b411bb6b0779ff7df68184",
    "tarball": "https://registry.npmjs.org/mochawesome-report-generator/-/mochawesome-report-generator-2.1.0.tgz"
  },
  "engine": "node >= 4",
  "files": [
    "bin/cli.js",
    "bin/cli-main.js",
    "bin/types.js",
    "bin/logger.js",
    "lib/main.js",
    "lib/main-html.js",
    "lib/options.js",
    "dist"
  ],
  "gitHead": "b45f5c46fa0d53a77381d3a975eb7c48377c535c",
  "homepage": "https://github.com/adamgruber/mochawesome-report-generator#readme",
  "keywords": [
    "mochawesome",
    "mocha",
    "reporter",
    "json",
    "react",
    "report generator"
  ],
  "license": "MIT",
  "main": "lib/main.js",
  "maintainers": [
    {
      "name": "adamgruber",
      "email": "talknmime@gmail.com"
    }
  ],
  "name": "mochawesome-report-generator",
  "nyc": {
    "sourceMap": false,
    "instrument": false,
    "reporter": [
      "html",
      "text",
      "cobertura",
      "lcov"
    ],
    "extension": [
      ".js",
      ".jsx"
    ],
    "exclude": [
      "test/**/*",
      "src/components/summary",
      "src/components/status-bar",
      "src/components/radio-button"
    ],
    "check-coverage": true,
    "statements": 95,
    "branches": 90,
    "functions": 95,
    "lines": 95
  },
  "optionalDependencies": {},
  "readme": "mochawesome-report-generator (marge)\n============================\n[![npm](https://img.shields.io/npm/v/mochawesome-report-generator.svg?style=flat-square)](http://www.npmjs.com/package/mochawesome-report-generator) [![Build Status](https://img.shields.io/travis/adamgruber/mochawesome-report-generator/master.svg?style=flat-square)](https://travis-ci.org/adamgruber/mochawesome-report-generator) [![Code Climate](https://img.shields.io/codeclimate/github/adamgruber/mochawesome-report-generator.svg?style=flat-square)](https://codeclimate.com/github/adamgruber/mochawesome-report-generator)\n\n**marge** (**m**och**a**wesome-**r**eport-**ge**nerator) is the counterpart to [mochawesome][2], a custom reporter for use with the Javascript testing framework, [mocha][1]. Marge takes the JSON output from [mochawesome][2] and generates a full fledged HTML/CSS report that helps visualize your test suites.\n\n## :tada: Latest Changes\n- Show before and after hooks alongside your tests\n- New menu option for fine-tuning how hooks display\n\nSee the [CHANGELOG][] for up-to-date changes.\n\n## Features\n- All-new redesigned and streamlined report\n- At-a-glance stats including pass percentage\n- Beautiful charts\n- Support for nested `describe`s\n- Supports pending tests\n- Filter view by test type\n- Quick navigation menu\n- Review test code inline\n- Stack trace for failed tests\n- Inline diffs for actual vs expected results\n- Responsive and mobile-friendly\n- Supports displaying additional test context\n- Custom report [options](#cli-options)\n- Offline viewing\n- CLI for generating reports independent of [mochawesome][2]\n\n## Browser Support\nTested to work in Chrome. *Should* work in any modern web browser including IE9+.\n**marge** generates a self-contained report that can be viewed offline. \n\n## Sample Report\n\n<img src=\"./docs/marge-report-1.0.1.png\" alt=\"Mochawesome Report\" width=\"75%\" />\n<img src=\"./docs/marge-report-menu-1.0.1.png\" alt=\"Mochawesome Report Menu\" width=\"75%\" />\n\n\n## Usage\n\n**via CLI**\n\nInstall mochawesome-report-generator package\n```bash\nnpm install -g mochawesome-report-generator\n```\n\nRun the command\n```bash\nmarge [options] data_file [data_file2 ...]\n```\n\n**via Mochawesome reporter**\n\nSee mochawesome [docs][2].\n\n## Output\n**marge** generates the following inside your project directory:\n```\nmochawesome-report/\n├── assets\n│   ├── app.css\n│   ├── app.js\n│   ├── MaterialIcons-Regular.woff\n│   ├── MaterialIcons-Regular.woff2\n│   ├── roboto-light-webfont.woff\n│   ├── roboto-light-webfont.woff2\n│   ├── roboto-medium-webfont.woff\n│   ├── roboto-medium-webfont.woff2\n│   ├── roboto-regular-webfont.woff\n│   └── roboto-regular-webfont.woff2\n└── mochawesome.html\n```\n\n## CLI Options\n\n**marge** can be configured via command line flags\n\nFlag | Type | Default | Description \n:--- | :--- | :------ | :----------\n-f, --reportFilename | string | | Filename of saved report\n-o, --reportDir | string | [cwd]/mochawesome-report | Path to save report\n-t, --reportTitle | string | mochawesome | Report title\n-p, --reportPageTitle | string | mochawesome-report | Browser title\n-i, --inline | boolean | false | Inline report assets (scripts, styles)\n--charts | boolean | true | Display Suite charts\n--code | boolean | true | Display test code\n--autoOpen | boolean | false | Automatically open the report\n--overwrite | boolean | true | Overwrite existing report files. *See [notes](#overwrite).*\n--timestamp, --ts | string | | Append timestamp in specified format to report filename. *See [notes](#timestamp).*\n--dev | boolean | false | Enable dev mode (requires local webpack dev server)\n-h, --help | | | Show CLI help\n\n\n*Boolean options can be negated by adding `--no` before the option. For example: `--no-code` would set `code` to `false`.*\n\n#### Overwrite\nBy default, report files are overwritten by subsequent report generation. Passing `--overwrite=false` will not replace existing files. Instead, if a duplicate filename is found, the report will be saved with a counter digit added to the filename. (ie. `mochawesome_001.html`).\n\n**Note:** `overwrite` will always be `false` when passing multiple files or using the `timestamp` option.\n\n#### Timestamp\nThe `timestamp` option can be used to append a timestamp to the report filename. It uses [dateformat][] to parse format strings so you can pass any valid string that [dateformat][] accepts with a few exceptions. In order to produce valid filenames, the following replacements are made:\n\nCharacters | Replacement | Example | Output\n:--- | :--- | :--- | :---\nspaces, commas | underscore | Wed March 29, 2017 | Wed_March_29_2017\nslashes | hyphen | 3/29/2017 | 3-29-2017\ncolons | null | 17:46:21 | 174621\n\nFurther, if you pass the flag with no format string, it will default to `isoDateTime`.\n\n[1]: https://mochajs.org/\n[2]: https://github.com/adamgruber/mochawesome\n[dateformat]: https://github.com/felixge/node-dateformat\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/adamgruber/mochawesome-report-generator.git"
  },
  "scripts": {
    "build": "rm -rf dist/assets && NODE_ENV=production npm run pack",
    "cli": "node ./bin/cli test/sample-data/test.json --dev",
    "compile": "npm run compile:main && npm run compile:cli",
    "compile:cli": "babel ./bin/src -d bin/",
    "compile:main": "babel ./lib/src -d lib/",
    "dev": "npm run compile && npm run cli && npm run devserver",
    "dev:cli": "nodemon --watch bin/src --watch lib/src --exec npm run compile",
    "devserver": "webpack-dev-server --config ./webpack/dev.config.js --inline --watch --hot",
    "dist": "npm run build && npm run compile",
    "lint": "eslint bin/src lib/src src/js src test --ext js,jsx",
    "pack": "npm run pack:external && npm run pack:inline",
    "pack:external": "webpack --config ./webpack/external.config.js",
    "pack:inline": "webpack --config ./webpack/inline.config.js",
    "stylelint": "stylelint src/**/*.css src/components/**/*.css",
    "test": "cross-env UV_THREADPOOL_SIZE=100 BABEL_DISABLE_CACHE=1 NODE_ENV=test nyc mocha --require test/helper.js \"test/spec/**/*.test.+\\(js\\|jsx\\)\"",
    "test:single": "cross-env UV_THREADPOOL_SIZE=100 BABEL_DISABLE_CACHE=1 NODE_ENV=test nyc mocha --require test/helper.js "
  },
  "version": "2.1.0"
}
